services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    volumes:
      - media_data:/app/media
      - static_data:/app/static
    ports:
      - "8000:8000"
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      SOCIAL_PASSWORD: ${SOCIAL_PASSWORD}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME}
      AWS_REGION: ${AWS_REGION}
      REDIS_URL: ${REDIS_URL}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      CELERY_TIMEZONE: ${CELERY_TIMEZONE}
    command: >
      bash -c "/app/venv/bin/python manage.py migrate &&
              /app/venv/bin/python manage.py collectstatic --noinput &&
              /app/venv/bin/daphne -b 0.0.0.0 -p 8000 hipsta_server.asgi:application"
    depends_on:
      - db
      - redis
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/auth/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - hipsta-network
    env_file:
      - ./.env  # Reference the .env file located in the same directory as docker-compose.yml

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    networks:
      - hipsta-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - hipsta-network

  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A hipsta_server worker --pool=solo -l info
    depends_on:
      - redis
      - db
    environment:
      SECRET_KEY: ${SECRET_KEY}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    restart: always
    networks:
      - hipsta-network
    env_file:
      - ./.env  # Reference the .env file located in the same directory as docker-compose.yml

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A hipsta_server beat --loglevel=info
    depends_on:
      - redis
      - db
    environment:
      SECRET_KEY: ${SECRET_KEY}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    restart: always
    networks:
      - hipsta-network
    env_file:
      - ./.env  # Reference the .env file located in the same directory as docker-compose.yml

volumes:
  db_data:
  media_data:
  static_data:
  redis_data:

networks:
  hipsta-network:
    driver: bridge
