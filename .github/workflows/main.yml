name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DO_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DO_HOST }} >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa

      - name: Deploy with Docker
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DO_HOST }} << 'EOF'
            set -xe

            # Clone or pull latest code
            if [ ! -d '/root/hipsta' ]; then
              echo 'Cloning repository...'
              git clone git@github.com:jishnu2040/hipsta.git /root/hipsta
            else
              echo 'Pulling latest changes...'
              cd /root/hipsta && git pull origin main
            fi

            # Write the .env.production file
            cat > /root/hipsta/.env.production <<EOT
SECRET_KEY=${{ secrets.SECRET_KEY }}
DB_NAME=${{ secrets.DB_NAME }}
DB_USER=${{ secrets.DB_USER }}
DB_PASSWORD=${{ secrets.DB_PASSWORD }}
DB_HOST=${{ secrets.DB_HOST }}
DB_PORT=${{ secrets.DB_PORT }}
REDIS_URL=${{ secrets.REDIS_URL }}
CELERY_BROKER_URL=${{ secrets.CELERY_BROKER_URL }}
CELERY_RESULT_BACKEND=${{ secrets.CELERY_RESULT_BACKEND }}
EMAIL_HOST=${{ secrets.EMAIL_HOST }}
EMAIL_PORT=${{ secrets.EMAIL_PORT }}
EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}
EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
EMAIL_USE_TLS=${{ secrets.EMAIL_USE_TLS }}
EMAIL_USE_SSL=${{ secrets.EMAIL_USE_SSL }}
DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}
AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}
AWS_REGION=${{ secrets.AWS_REGION }}
GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
SOCIAL_PASSWORD=${{ secrets.SOCIAL_PASSWORD }}
DEBUG=${{ secrets.DEBUG }}
ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
EOT

            # Docker login on droplet
            docker login -u '${{ secrets.DOCKER_USERNAME }}' -p '${{ secrets.DOCKER_PASSWORD }}'

            # Pull latest Docker image
            docker pull jishnu2040/hipsta-backend:latest

            # Restart containers
            cd /root/hipsta
            docker-compose -f docker-compose.yml --env-file .env.production down
            docker-compose -f docker-compose.yml --env-file .env.production up --build -d
EOF
