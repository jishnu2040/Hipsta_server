name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DO_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DO_HOST }} >> ~/.ssh/known_hosts
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa

      - name: Deploy with Docker
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DO_HOST }} "
            if [ ! -d '/root/hipsta' ]; then
              git clone https://github.com/jishnu2040/hipsta.git /root/hipsta;
            else
              cd /root/hipsta && git pull origin main;
            fi &&

            # Export environment variables
            export SECRET_KEY=${{ secrets.SECRET_KEY }}
            export DB_NAME=${{ secrets.DB_NAME }}
            export DB_USER=${{ secrets.DB_USER }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export DB_HOST=${{ secrets.DB_HOST }}
            export DB_PORT=${{ secrets.DB_PORT }}
            export REDIS_URL=${{ secrets.REDIS_URL }}
            export CELERY_BROKER_URL=${{ secrets.CELERY_BROKER_URL }}
            export CELERY_RESULT_BACKEND=${{ secrets.CELERY_RESULT_BACKEND }}
            export EMAIL_HOST=${{ secrets.EMAIL_HOST }}
            export EMAIL_PORT=${{ secrets.EMAIL_PORT }}
            export EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}
            export EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
            export EMAIL_USE_TLS=${{ secrets.EMAIL_USE_TLS }}
            export EMAIL_USE_SSL=${{ secrets.EMAIL_USE_SSL }}
            export DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}
            export AWS_REGION=${{ secrets.AWS_REGION }}
            export GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            export GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            export SOCIAL_PASSWORD=${{ secrets.SOCIAL_PASSWORD }}
            export DEBUG=${{ secrets.DEBUG }}
            export ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}

            # Ensure the .env.production file is correctly set up with all necessary variables
            echo -e \"
            SECRET_KEY=\$SECRET_KEY
            DB_NAME=\$DB_NAME
            DB_USER=\$DB_USER
            DB_PASSWORD=\$DB_PASSWORD
            DB_HOST=\$DB_HOST
            DB_PORT=\$DB_PORT
            REDIS_URL=\$REDIS_URL
            CELERY_BROKER_URL=\$CELERY_BROKER_URL
            CELERY_RESULT_BACKEND=\$CELERY_RESULT_BACKEND
            EMAIL_HOST=\$EMAIL_HOST
            EMAIL_PORT=\$EMAIL_PORT
            EMAIL_HOST_USER=\$EMAIL_HOST_USER
            EMAIL_HOST_PASSWORD=\$EMAIL_HOST_PASSWORD
            EMAIL_USE_TLS=\$EMAIL_USE_TLS
            EMAIL_USE_SSL=\$EMAIL_USE_SSL
            DEFAULT_FROM_EMAIL=\$DEFAULT_FROM_EMAIL
            AWS_ACCESS_KEY_ID=\$AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY=\$AWS_SECRET_ACCESS_KEY
            AWS_STORAGE_BUCKET_NAME=\$AWS_STORAGE_BUCKET_NAME
            AWS_REGION=\$AWS_REGION
            GOOGLE_CLIENT_ID=\$GOOGLE_CLIENT_ID
            GOOGLE_CLIENT_SECRET=\$GOOGLE_CLIENT_SECRET
            SOCIAL_PASSWORD=\$SOCIAL_PASSWORD
            DEBUG=\$DEBUG
            ALLOWED_HOSTS=\$ALLOWED_HOSTS
            \" > /root/hipsta/.env.production &&

            # Ensure Docker login works on the server
            docker login -u \"${{ secrets.DOCKER_USERNAME }}\" -p \"${{ secrets.DOCKER_PASSWORD }}\" &&

            # Pull latest image
      ::contentReference[oaicite:0]{index=0}
 
